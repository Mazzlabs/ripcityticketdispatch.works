name: Deploy Sports Affiliate Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          affiliate-backend/package-lock.json
          affiliate-frontend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd affiliate-backend
        npm ci

    - name: Install frontend dependencies
      run: |
        cd affiliate-frontend
        npm ci

    - name: Lint backend code
      run: |
        cd affiliate-backend
        npm run lint || echo "No lint script found, skipping..."

    - name: Test backend
      run: |
        cd affiliate-backend
        npm test || echo "No test script found, skipping..."
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TICKETMASTER_KEY: ${{ secrets.TICKETMASTER_KEY }}
        TICKETMASTER_SECRET: ${{ secrets.TICKETMASTER_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Build frontend
      run: |
        cd affiliate-frontend
        npm run build

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          affiliate-backend/package-lock.json
          affiliate-frontend/package-lock.json

    - name: Install and build
      run: |
        cd affiliate-backend
        npm ci
        cd ../affiliate-frontend
        npm ci
        npm run build

    - name: Deploy to DigitalOcean App Platform
      uses: digitalocean/app_action@v1.1.5
      with:
        app_name: rip-city-api
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      env:
        # Backend environment variables with secrets
        NODE_ENV: staging
        PORT: 8080
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TICKETMASTER_KEY: ${{ secrets.TICKETMASTER_KEY }}
        TICKETMASTER_SECRET: ${{ secrets.TICKETMASTER_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        FRONTEND_URL: https://ripcityticketdispatch.works
        CORS_ORIGINS: https://ripcityticketdispatch.works,https://mazzlabs.works

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          affiliate-backend/package-lock.json
          affiliate-frontend/package-lock.json

    - name: Install and build
      run: |
        cd affiliate-backend
        npm ci
        cd ../affiliate-frontend
        npm ci
        npm run build

    - name: Deploy to DigitalOcean App Platform
      uses: digitalocean/app_action@v1.1.5
      with:
        app_name: rip-city-api
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      env:
        # Production environment variables with secrets
        NODE_ENV: production
        PORT: 8080
        MONGODB_URI: ${{ secrets.MONGODB_URI_PROD }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TICKETMASTER_KEY: ${{ secrets.TICKETMASTER_KEY }}
        TICKETMASTER_SECRET: ${{ secrets.TICKETMASTER_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        FRONTEND_URL: https://ripcityticketdispatch.works
        CORS_ORIGINS: https://ripcityticketdispatch.works,https://mazzlabs.works
        
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: |
        cd affiliate-backend
        npm audit --audit-level moderate
        cd ../affiliate-frontend
        npm audit --audit-level moderate

    - name: Run secret scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD